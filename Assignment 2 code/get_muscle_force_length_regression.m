function [force_length_regression] = get_muscle_force_length_regression()
%%% TASK 2

% Input Parameters
% data(:,1): samples of an independent variable
% data(:,2): corresponding samples of a dependent variable

% Output
% force_length_regression: the genered Gaussian model

%     WRITE CODE HERE
%      1) Use WebPlotDigitizer to extract force-length points
%     from Winters et al. (2011) Figure 3C, which is on Learn. Click
%     "View Data", select all, cut, and paste below. 
%     2) Normalize the data so optimal length = 1 and peak = 1. 
%     3) Return a Regression object that  uses Gaussian basis functions.

% Define data points
data = [37.41935483870968, 9.846153846153854
    39.40860215053763, 3.692307692307679
    41.82795698924731, 2.051282051282044
    38.44086021505376, 14.76923076923076
    41.344086021505376, 14.56410256410257
    41.45161290322581, 15.794871794871796
    40.322580645161295, 17.84615384615384
    40.376344086021504, 21.74358974358975
    39.24731182795699, 24.615384615384613
    43.924731182795696, 22.15384615384616
    43.38709677419355, 23.999999999999986
    42.903225806451616, 23.794871794871796
    41.39784946236559, 26.871794871794876
    41.39784946236559, 31.79487179487178
    42.043010752688176, 32.205128205128204
    43.38709677419355, 34.871794871794876
    40.43010752688172, 36.717948717948715
    42.473118279569896, 42.25641025641025
    43.38709677419355, 44.717948717948715
    44.35483870967742, 45.74358974358974
    45.483870967741936, 46.56410256410257
    45.483870967741936, 44.10256410256409
    46.72043010752688, 44.92307692307692
    45.376344086021504, 53.53846153846153
    45.215053763440864, 54.153846153846146
    42.8494623655914, 46.35897435897435
    42.8494623655914, 48.41025641025641
    43.11827956989248, 50.051282051282044
    43.38709677419355, 54.153846153846146
    43.70967741935484, 57.02564102564102
    44.40860215053763, 60.717948717948715
    46.344086021505376, 62.769230769230774
    47.365591397849464, 62.769230769230774
    48.97849462365592, 62.97435897435898
    45.6989247311828, 67.8974358974359
    47.68817204301075, 66.87179487179488
    47.41935483870968, 71.7948717948718
    45.913978494623656, 70.97435897435896
    46.39784946236559, 71.58974358974359
    46.39784946236559, 73.64102564102564
    46.66666666666667, 75.48717948717947
    49.40860215053764, 76.3076923076923
    50.59139784946237, 74.46153846153845
    50.80645161290323, 77.94871794871796
    51.12903225806451, 78.56410256410257
    50.96774193548387, 80.2051282051282
    47.096774193548384, 80.61538461538461
    47.52688172043011, 81.64102564102564
    47.58064516129032, 81.64102564102564
    48.17204301075269, 83.28205128205128
    48.97849462365592, 82.25641025641025
    48.924731182795696, 81.43589743589743
    49.784946236559136, 81.84615384615384
    53.54838709677419, 83.28205128205128
    53.54838709677419, 78.97435897435898
    50.6989247311828, 85.12820512820514
    49.83870967741936, 85.12820512820514
    50.6989247311828, 87.58974358974359
    50.26881720430107, 87.58974358974359
    49.677419354838705, 86.56410256410257
    48.924731182795696, 85.33333333333334
    50.6989247311828, 90.66666666666666
    51.505376344086024, 89.64102564102564
    51.72043010752688, 91.07692307692308
    52.68817204301075, 89.23076923076923
    53.27956989247312, 88.82051282051282
    53.924731182795696, 92.1025641025641
    53.655913978494624, 92.3076923076923
    53.49462365591398, 94.56410256410257
    53.54838709677419, 96.61538461538461
    53.817204301075265, 96.82051282051282
    54.3010752688172, 94.56410256410257
    54.13978494623656, 93.94871794871796
    54.67741935483872, 99.6923076923077
    55.75268817204301, 96.2051282051282
    56.12903225806453, 96.2051282051282
    56.45161290322581, 99.6923076923077
    56.82795698924731, 99.6923076923077
    57.043010752688176, 99.6923076923077
    57.258064516129025, 98.05128205128204
    57.52688172043011, 99.6923076923077
    57.84946236559139, 99.28205128205128
    58.54838709677419, 96.41025641025641
    58.924731182795696, 99.28205128205128
    59.35483870967742, 97.84615384615384
    59.67741935483872, 96
    59.83870967741936, 96.82051282051282
    60, 95.58974358974359
    60.53763440860216, 99.6923076923077
    60.59139784946237, 93.53846153846155
    57.84946236559139, 91.28205128205128
    58.44086021505376, 90.66666666666666
    59.35483870967742, 91.07692307692308
    61.344086021505376, 94.97435897435898
    62.36559139784947, 96.41025641025641
    61.344086021505376, 91.8974358974359
    62.25806451612904, 89.43589743589743
    61.45161290322581, 88
    61.29032258064517, 84.3076923076923
    61.397849462365585, 79.58974358974359
    63.763440860215056, 89.64102564102564
    64.51612903225806, 86.97435897435898
    63.763440860215056, 86.97435897435898
    63.655913978494624, 85.53846153846155
    63.17204301075269, 86.35897435897436
    62.63440860215054, 79.58974358974359
    61.45161290322581, 76.92307692307692
    63.49462365591398, 79.7948717948718
    63.38709677419355, 80.61538461538461
    63.87096774193549, 80.2051282051282
    64.51612903225806, 81.84615384615384
    63.97849462365592, 76.10256410256409
    65.10752688172043, 76.3076923076923
    65.64516129032258, 72.61538461538461
    66.12903225806451, 72.2051282051282
    66.3978494623656, 75.69230769230768
    66.88172043010752, 66.25641025641025
    65.75268817204301, 68.3076923076923
    65.75268817204301, 66.46153846153845
    65.43010752688173, 64
    67.20430107526882, 63.17948717948718
    67.79569892473118, 62.56410256410257
    68.44086021505376, 59.69230769230769
    63.38709677419355, 59.48717948717949
    63.38709677419355, 52.92307692307692
    64.78494623655914, 53.33333333333333
    64.78494623655914, 52.30769230769231
    65.6989247311828, 48.205128205128204
    67.47311827956989, 51.8974358974359
    66.98924731182795, 43.076923076923066
    69.46236559139786, 41.641025641025635
    70.59139784946237, 48.61538461538461
    67.41935483870968, 35.8974358974359
    68.54838709677419, 27.282051282051285
    70.21505376344086, 29.53846153846152
    70.43010752688173, 29.53846153846152
    71.45161290322581, 34.66666666666667
    73.38709677419355, 34.66666666666667
    73.01075268817205, 25.64102564102565
    72.41935483870968, 24.820512820512803
    73.44086021505377, 18.666666666666657
    73.44086021505377, 17.84615384615384
    73.38709677419355, 12.717948717948715
    74.40860215053763, 12.923076923076906
    75.3763440860215, 12.512820512820497
    75.21505376344086, 18.25641025641025
    76.45161290322581, 8.615384615384599];

% Normalization
[max_force, max_force_index] = max(data(:,2));
max_length = data(max_force_index, 1);

% Normalize force column
normalized_force = data(:,2) / max_force;

% Normalize length column
normalized_length = data(:,1) / max_length;

% Display max force and length values
% disp('Maximum Force and Corresponding Length:')
% disp(['Max Force: ', num2str(max_force)]);
% disp(['Corresponding Length: ', num2str(max_length)]);

% Create a new table with normalized force and length
normalized_data = [normalized_length, normalized_force];

length = normalized_data(:,1);
force = normalized_data(:,2);

% Regression with "fit" function with "gauss2" option as model type

mdl = fit(length, force, 'gauss2');

force_length_regression = mdl;

end
